{"version":3,"sources":["hooks/auth.hook.js","context/AuthContext.js","hooks/http.hook.js","pages/AuthPage.js","hooks/message.hook.js","pages/CreatePage.js","components/LinkCard.js","components/Loader.js","pages/DetailPage.js","components/LinksList.js","pages/LinksPage.js","components/Navbar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["storageName","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","AuthPage","auth","useContext","text","window","M","toast","html","email","password","form","setForm","useEffect","updateTextFields","changeHandler","event","target","name","value","registerHandler","loginHandler","className","placeholder","id","type","onChange","htmlFor","style","marginRight","disabled","onClick","CreatePage","history","useHistory","link","setLink","pressHandler","key","from","Authorization","push","_id","paddingTop","e","onKeyPress","LinkCard","href","to","rel","clicks","Date","date","toLocaleDateString","Loader","display","justifyContent","DetailPage","linkId","useParams","getLink","fetched","LinksList","links","length","map","index","LinksPage","setLinks","fetchLinks","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4c455cd.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\n\nconst storageName = 'userData'\n\nexport const useAuth = () => {\n   const [token, setToken] = useState(null)\n   const [ready, setReady] = useState(false)\n   const [userId, setUserId] = useState(null)\n\n   const login = useCallback((jwtToken, id) => {\n      setToken(jwtToken)\n      setUserId(id)\n      localStorage.setItem(storageName, JSON.stringify({ userId: id, token: jwtToken }))\n   }, [])\n   \n   const logout = useCallback(() => {\n      setToken(null)\n      setUserId(null)\n      localStorage.removeItem(storageName)\n   }, [])\n   \n   useEffect(() => {\n      const data = JSON.parse(localStorage.getItem(storageName))\n\n      if (data && data.token) {\n         login(data.token, data.userId)\n      }\n      setReady(true)\n   }, [login])\n\n   return { login, logout, token, userId, ready }\n}","import { createContext } from \"react\";\n\nfunction noop() { }\n\nexport const AuthContext = createContext({\n   token: null,\n   userId: null,\n   login: noop,\n   logout: noop,\n   isAuthenticated: false\n})","import { useCallback, useState } from \"react\"\n\nexport const useHttp = () => {\n   const [loading, setLoading] = useState(false)\n   const [error, setError] = useState(null)\n\n   const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n      setLoading(true)\n      try {\n         if (body) {\n            body = JSON.stringify(body)\n            headers['Content-Type'] = 'application/json'\n         }\n\n         const response = await fetch(url, { method, body, headers })\n         const data = await response.json()\n\n         if (!response.ok) {\n            throw new Error(data.message || 'Что-то пошло не так')\n         }\n\n         setLoading(false)\n\n         return data\n      } catch (e) {\n         setLoading(false)\n         setError(e.message)\n         throw e\n      }\n   }, [])\n\n   const clearError = useCallback(() => setError(null), [])\n\n   return { loading, request, error, clearError }\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../context/AuthContext'\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from '../hooks/message.hook'\n\nexport const AuthPage = () => {\n   const auth = useContext(AuthContext)\n   const message = useMessage()\n   const { loading, request, error, clearError } = useHttp()\n   const [form, setForm] = useState({\n      email: '', password: ''\n   })\n\n   useEffect(() => {\n      message(error)\n      clearError()\n   }, [error, message, clearError])\n\n   useEffect(() => {\n      window.M.updateTextFields()\n   }, [])\n\n   const changeHandler = event => {\n      setForm({ ...form, [event.target.name]: event.target.value })\n   }\n\n   const registerHandler = async () => {\n      try {\n         const data = await request('/api/auth/register', 'POST', { ...form })\n         message(data.message)\n      } catch (e) {}\n   }\n\n   const loginHandler = async () => {\n      try {\n         const data = await request('/api/auth/login', 'POST', { ...form })\n         // message(data.message)\n         auth.login(data.token, data.userId)\n      } catch (e) {}\n   }\n\n   return (\n      <div className=\"row\">\n         <div className=\"col s6 offset-s3\">\n            <h1>Сократи Ссылку</h1>\n            <div className=\"card blue darken-1\">\n               <div className=\"card-content white-text\">\n                  <span className=\"card-title\">Авторизация</span>\n                  <div>\n\n                     <div className=\"input-field\">\n                        <input\n                           placeholder=\"Введите email\"\n                           id=\"email\"\n                           type=\"text\"\n                           name=\"email\"\n                           className=\"yellow-input\"\n                           value={form.email}\n                           onChange={changeHandler}\n                           />\n                        <label htmlFor=\"email\">Email</label>\n                     </div>\n                     <div className=\"input-field\">\n                        <input\n                           placeholder=\"Введите пароль\"\n                           id=\"password\"\n                           type=\"password\"\n                           name=\"password\"\n                           className=\"yellow-input\"\n                           value={form.password}\n                           onChange={changeHandler}\n                        />\n                        <label htmlFor=\"password\">Пароль</label>\n                     </div>\n                     \n                  </div>\n               </div>\n               <div className=\"card-action\">\n                  <button className=\"btn yellow darken-4\"\n                     style={{ marginRight: 10 }}\n                     disabled={loading}\n                     onClick={loginHandler}\n                  >Войти</button>\n                  <button className=\"btn grey lighten-1 black-text\"\n                     onClick={registerHandler}\n                     disabled={loading}\n                  >Регистрация</button>\n               </div>\n            </div>\n         </div>\n      </div>\n   )\n}","import { useCallback } from \"react\"\n\nexport const useMessage = () => {\n   return useCallback( text => {\n      if (window.M && text) {\n         window.M.toast({ html: text })\n      }\n   }, [])\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../context/AuthContext'\nimport { useHttp } from '../hooks/http.hook'\n\nexport const CreatePage = () => {\n   const history = useHistory()\n   const auth = useContext(AuthContext)\n   const { request } = useHttp()\n   const [link, setLink] = useState('')\n\n   useEffect(() => {\n      window.M.updateTextFields()\n   }, [])\n\n   const pressHandler = async event => {\n      if (event.key === 'Enter') {\n         try {\n            const data = await request('/api/link/generate', 'POST', { from: link }, {\n               Authorization: `Bearer ${auth.token}`\n            })\n            history.push(`/detail/${data.link._id}`)\n         } catch (error) {\n            \n         }\n      }\n   }\n\n   return (\n      <div className=\"row\">\n         <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\n            <div className=\"input-field\">\n               <input\n                  placeholder=\"Вставьте ссылку\"\n                  id=\"link\"\n                  type=\"text\"\n                  value={link}\n                  onChange={e => setLink(e.target.value)}\n                  onKeyPress={pressHandler}\n               />\n               <label htmlFor=\"link\">Введите ссылку</label>\n            </div>\n         </div>\n      </div>\n   )\n}","import React from 'react'\n\nexport const LinkCard = ({ link }) => {\n   return (\n   <>\n      <h2>Ссылка {link._id}</h2>\n      <p>Ваша ссылка: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\n      <p>Откуда: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\n      <p>Количество кликов по ссылке: <strong>{link.clicks}</strong></p>\n      <p>Дата создания: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\n      </>\n   )\n}","import React from 'react'\n\nexport const Loader = () => (\n   <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\n      <div className=\"preloader-wrapper active\">\n         <div className=\"spinner-layer spinner-red-only\">\n            <div className=\"circle-clipper left\">\n               <div className=\"circle\"></div>\n            </div>\n            <div className=\"gap-patch\">\n               <div className=\"circle\"></div>\n            </div>\n            <div className=\"circle-clipper right\">\n               <div className=\"circle\"></div>\n            </div>\n         </div>\n      </div>\n   </div>\n)","import React, { useCallback, useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { LinkCard } from '../components/LinkCard'\nimport { Loader } from '../components/Loader'\nimport { AuthContext } from '../context/AuthContext'\nimport { useHttp } from '../hooks/http.hook'\n\nexport const DetailPage = () => {\n   const { token } = useContext(AuthContext)\n   const { request, loading } = useHttp()\n   const [link, setLink] = useState(null)\n   const linkId = useParams().id\n\n   const getLink = useCallback(async () => {\n      try {\n         const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\n            Authorization: `Bearer ${token}`\n         })\n         setLink(fetched)\n      } catch (error) {\n\n      }\n   }, [token, linkId, request])\n\n   useEffect(() => {\n      getLink()\n   }, [getLink])\n\n   if (loading) {\n      return <Loader />\n   }\n\n   return (\n      <>\n         {!loading && link && <LinkCard link={link} />}\n      </>\n   )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const LinksList = ({ links }) => {\n   if (!links.length) {\n      return <p className=\"center\">Ссылок пока нет </p>\n   }\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>№</th>\n               <th>Оригинальная ссылка</th>\n               <th>Сокращенная ссылка</th>\n               <th>Действие</th>\n            </tr>\n         </thead>\n\n         <tbody>\n            {links.map((link, index) => {\n               return (\n                  <tr key={index}>\n                     <td>{index + 1}</td>\n                     <td>{link.from}</td>\n                     <td>{link.to}</td>\n                     <td>\n                        <Link to={`/detail/${link._id}`}>Открыть</Link>\n                     </td>\n                  </tr>\n               )\n            })}\n\n         </tbody>\n      </table>\n   )\n}","import React, { useCallback, useContext, useEffect, useState } from 'react'\nimport { LinksList } from '../components/LinksList'\nimport { Loader } from '../components/Loader'\nimport { AuthContext } from '../context/AuthContext'\nimport { useHttp } from '../hooks/http.hook'\n\nexport const LinksPage = () => {\n   const [links, setLinks] = useState([])\n   const { loading, request } = useHttp()\n   const { token } = useContext(AuthContext)\n\n   const fetchLinks = useCallback(async () => {\n      try {\n         const fetched = await request('/api/link', 'GET', null, {\n            Authorization: `Bearer ${token}`\n         })\n         setLinks(fetched)\n      } catch (error) {}\n   }, [token, request])\n\n   useEffect(() => {\n      fetchLinks()\n   }, [fetchLinks])\n\n   if (loading) {\n      return <Loader />\n   }\n\n   return (\n      <>\n         {!loading && <LinksList links={links} />}\n      </>\n   )\n}","import React, { useContext } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../context/AuthContext'\n\nexport const Navbar = () => {\n\n   const history = useHistory()\n   const auth = useContext(AuthContext)\n\n   const logoutHandler = event => {\n      event.preventDefault()\n      auth.logout()\n      history.push('/')\n   }\n\n   return (\n      <nav>\n         <div className=\"nav-wrapper blue darken-1\" style={{padding: '0 2rem'}}>\n            <span className=\"brand-logo\">Сокращение ссылок</span>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n               <li><NavLink to=\"/create\">Создать</NavLink></li>\n               <li><NavLink to=\"/links\">Ссылки</NavLink></li>\n               <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\n            </ul>\n         </div>\n      </nav>\n   )\n}","import { BrowserRouter } from 'react-router-dom';\nimport { useAuth } from './hooks/auth.hook';\nimport { useRoutes } from './routes';\nimport { AuthContext } from './context/AuthContext';\nimport { Navbar } from './components/Navbar';\nimport { Loader } from './components/Loader';\nimport 'materialize-css'\n\nfunction App() {\n  const { token, login, logout, userId, ready } = useAuth()\n  const isAuthenticated = !!token\n  const routes = useRoutes(isAuthenticated)\n\n  if (!ready) {\n    return <Loader />\n  }\n\n  return (\n    <AuthContext.Provider value={{ token, login, logout, userId, isAuthenticated }}>\n      <BrowserRouter>\n        {isAuthenticated && <Navbar />}\n        <div className=\"container\">\n          {routes}\n        </div>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { AuthPage } from './pages/AuthPage'\nimport { CreatePage } from './pages/CreatePage'\nimport { DetailPage } from './pages/DetailPage'\nimport { LinksPage } from './pages/LinksPage'\n\nexport const useRoutes = isAuthenticated => {\n   if (isAuthenticated) {\n      return (\n         <Switch>\n            <Route path=\"/links\" exact>\n               <LinksPage />\n            </Route>\n            <Route path=\"/create\" exact>\n               <CreatePage />\n            </Route>\n            <Route path=\"/detail/:id\">\n               <DetailPage />\n            </Route>\n            <Redirect to=\"/create\" />\n         </Switch>\n      )\n   }\n\n   return (\n      <Switch>\n         <Route path=\"/\" exact>\n            <AuthPage />\n         </Route>\n         <Redirect to=\"/\" />\n      </Switch>\n   )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}